name: Build Wheels

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Package Index'
        required: true
        default: 'TESTPYPI'
  release:
    types: qq
      - published

jobs:
  build_wheels:
    name: Wheels for py${{ matrix.python }} on ${{ matrix.os }} using ${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest , windows-latest, macos-latest ]
        python: [ 37, 38, 39, '310', '311' ]
        arch: [ auto ]

    steps:
      - name: Checkout bcolz
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Wheels for macOS / Linux
        if: runner.os != 'Windows'
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BEFORE_ALL_MACOS: brew install hdf5 c-blosc
          CIBW_SKIP: '*-manylinux*_i686'
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_BUILD: "cp${{ matrix.python }}-*"
          CIBW_ENVIRONMENT_LINUX: DISABLE_BCOLZ_AVX2=true
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.15 DISABLE_BCOLZ_AVX2=true

      - name: Install MSVC amd64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Build wheels windows
        if: runner.os == 'Windows'
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: 'cp38-win_amd64 cp39-win_amd64 cp310-win_amd64 cp311-win_amd64'
          CIBW_ENVIRONMENT: DISABLE_BCOLZ_AVX2=true DISABLE_BCOLZ_SSE2=true

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.10'

      - name: Build sdist
        run: pipx run --spec build pyproject-build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [ build_wheels, build_sdist ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: publish to testpypi
        uses: pypa/gh-action-pypi-publish@release/v1
        if: ${{ github.event.inputs.target }} == 'TESTPYPI'
        with:
          user: __token__
          password: ${{ secrets.PYPITEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: publish to pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        if: ${{ github.event.inputs.target }} == 'PYPI' || (github.event_name == 'release' && github.event.action == 'published')
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}